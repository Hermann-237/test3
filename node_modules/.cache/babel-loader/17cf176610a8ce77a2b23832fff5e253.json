{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Simplicyto.com/2021-03-19Bon/project1/simo/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst validator = require(\"email-validator\");\n\nfunction Contact() {\n  _s();\n\n  const [email, setemail] = useState(\"\");\n  const [send, setsend] = useState(false);\n  const [text, settext] = useState(\"\");\n  const [ifText, setIfText] = useState(true);\n  const [fini, setfini] = useState(false);\n  const history = useHistory();\n  const [valeurEmail, setValeurEmail] = useState(true);\n  /* if (email.length === 0) setValeurEmail(false) */\n\n  const handleClick = e => {\n    e.preventDefault();\n    console.log(email, text);\n    const a = validator.validate(email);\n    setValeurEmail(validator.validate(email));\n    console.log(a);\n    if (!a) setValeurEmail(false);else if (text.length < 20) setIfText(false);else if (a && text.length > 20) {\n      setfini(true);\n      setValeurEmail(true);\n      setIfText(true);\n      axios({\n        method: 'post',\n        url: 'https://backendsimplicyto.herokuapp.com/contact',\n        data: {\n          email,\n          text\n        }\n      }).then(result => {}).catch(err => console.log(err));\n    }\n    /* if (!valeurEmail) */\n\n    /* axios({\n        method: 'post',\n        url: 'https://backendsimplicyto.herokuapp.com/contact',\n        data: {\n            email,\n            text\n        }\n    }).then(result => {\n        function validateEmail(emailss) {\n            const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return re.test(String(emailss).toLowerCase());\n        }\n        const valeurEmail = validateEmail(email)\n        if (!valeurEmail) setmessage(\"The Email have to be an Email\")\n        else if (text.length < 20) setmessage(\"The text must contain at least 20 caracters\")\n        else {\n            setsend(true)\n        }\n     })\n        .catch(err => console.log(err)) */\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5 allBody \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mx-5\",\n        children: [fini ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \" ml-4 text-info pt-2\",\n          children: \"Thank you! Your message has been saved... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 125\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            id: \"email\",\n            placeholder: \"name@example.com\",\n            name: \"email\",\n            value: email,\n            onChange: e => setemail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), !valeurEmail ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"This Email is not valid \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 110\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text-area\",\n            children: \"Contact us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"text-area\",\n            rows: \"10\",\n            name: \"text\",\n            value: text,\n            onChange: e => settext(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-info  px-5\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#exampleModal\",\n            onClick: handleClick,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), !ifText ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger ml-4 pt-2\",\n            children: \"The text must contain at least 20 caracters \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 135\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Contact, \"zcE38o8eD/VF/0K3v1yuEHUImVk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/home/dci/Desktop/Simplicyto.com/2021-03-19Bon/project1/simo/src/components/Contact.js"],"names":["React","useState","useHistory","axios","validator","require","Contact","email","setemail","send","setsend","text","settext","ifText","setIfText","fini","setfini","history","valeurEmail","setValeurEmail","handleClick","e","preventDefault","console","log","a","validate","length","method","url","data","then","result","catch","err","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport axios from \"axios\"\nconst validator = require(\"email-validator\")\n\nfunction Contact() {\n    const [email, setemail] = useState(\"\")\n    const [send, setsend] = useState(false)\n    const [text, settext] = useState(\"\")\n    const [ifText, setIfText] = useState(true)\n    const [fini, setfini] = useState(false)\n    const history = useHistory()\n    const [valeurEmail, setValeurEmail] = useState(true)\n    /* if (email.length === 0) setValeurEmail(false) */\n    const handleClick = (e) => {\n        e.preventDefault();\n        console.log(email, text)\n        const a = validator.validate(email)\n        setValeurEmail(validator.validate(email))\n        console.log(a)\n        if (!a) setValeurEmail(false)\n        else if (text.length < 20) setIfText(false)\n        else if (a && text.length > 20) {\n            setfini(true)\n            setValeurEmail(true)\n            setIfText(true)\n            axios({\n                method: 'post',\n                url: 'https://backendsimplicyto.herokuapp.com/contact',\n                data: {\n                    email,\n                    text\n                }\n            }).then(result => {\n\n            })\n                .catch(err => console.log(err))\n\n        }\n\n        /* if (!valeurEmail) */\n\n\n        /* axios({\n            method: 'post',\n            url: 'https://backendsimplicyto.herokuapp.com/contact',\n            data: {\n                email,\n                text\n            }\n        }).then(result => {\n            function validateEmail(emailss) {\n                const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                return re.test(String(emailss).toLowerCase());\n            }\n            const valeurEmail = validateEmail(email)\n            if (!valeurEmail) setmessage(\"The Email have to be an Email\")\n            else if (text.length < 20) setmessage(\"The text must contain at least 20 caracters\")\n            else {\n                setsend(true)\n            }\n\n        })\n            .catch(err => console.log(err)) */\n    }\n\n    return (\n        <>\n\n            <div className=\"container my-5 allBody \">\n                <form className=\"mx-5\">\n                    {\n                        (fini) ? <span className=\" ml-4 text-info pt-2\">Thank you! Your message has been saved... </span> : <span></span>\n                    }\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"email\">Email address</label>\n                        <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"name@example.com\" name=\"email\" value={email} onChange={(e) => setemail(e.target.value)} />\n                        {\n                            (!valeurEmail) ? <span className=\"text-danger\">This Email is not valid </span> : <span></span>\n                        }\n                    </div>\n\n\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"text-area\">Contact us</label>\n                        <textarea className=\"form-control\" id=\"text-area\" rows=\"10\" name=\"text\" value={text} onChange={(e) => settext(e.target.value)}></textarea>\n                    </div>\n                    <div className=\"form-group row\">\n                        <button type=\"button\" className=\"btn btn-info  px-5\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={handleClick}>Send</button>\n\n                        {\n                            (!ifText) ? <span className=\"text-danger ml-4 pt-2\">The text must contain at least 20 caracters </span> : <span></span>\n                        }\n\n\n\n\n                    </div>\n                </form>\n                {/*  {\n                    (valeurEmail && fini) ? (<div>\n\n                        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div className=\"modal-dialog\">\n                                <div className=\"modal-content\">\n                                    <div className=\"modal-header\">\n                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Thank you!</h5>\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => history.push(\"/\")}>\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                        <p className=\"text-info\"> Your message has been sent successfully...</p>\n                                    </div>\n                                    <div className=\"modal-footer\">\n                                        <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => history.push(\"/\")}>Close</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>) : (<div></div>)\n                } */}\n\n            </div>\n        </>\n    )\n}\n\nexport default Contact\n"]},"metadata":{},"sourceType":"module"}